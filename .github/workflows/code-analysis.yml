name: Code Analysis & Tests
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  security:
    strategy:
      matrix:
        os: ["ubuntu-latest"] # "self-hosted", "macos-latest", "windows-latest"
    name: Scan for security issues
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Scan leak secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  analysis:
    strategy:
      matrix:
        os: ["ubuntu-latest"] # "self-hosted", "macos-latest", "windows-latest"
        go-version: ["1.18.x", ""] # empty string means use go-version-file(go.mod)
    name: Lint, Test and Build (${{ matrix.go-version }} ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    env:
      pr_info: |
        üí° `${{ github.event.pull_request.title }}` (#${{ github.event.pull_request.number }})
        ü§î Created by @${{ github.event.pull_request.user.login }}
        üî® Merging commit ${{ github.sha }} on branch [${{ github.head_ref }}](${{ github.event.pull_request.head.repo.html_url }}/tree/${{ github.head_ref }})
        üìù Action Status [#${{ github.run_number }}](${{ github.event.pull_request.html_url }}/checks)
    steps:
      - uses: actions/checkout@v3

      - name: Update Pull Request Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: code-analysis
          message: |
            ## üîç Running Code Analysis & Testing for 
            ${{ env.pr_info }}
            _Please wait for the result before merging this pull request._

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          go-version-file: "go.mod"
          cache: true

      - name: Install dependencies
        run: go get ./...

      # # Q: Why Reviewdog ?
      # # A: Because golangci-lint action has some issues, not working on self-hosted runners and can't report errors detail on review comments.
      # # See: https://github.com/reviewdog/reviewdog
      # - name: Lint
      #   uses: reviewdog/action-golangci-lint@v2
      #   with: # https://github.com/reviewdog/action-golangci-lint#inputs
      #     go_version_file: "go.mod"
      #     workdir: ./
      #     golangci_lint_flags: "--config=./.golangci.yaml --verbose --new-from-rev=${{ github.event.pull_request.base.sha }}" # show only new issues
      #     fail_on_error: true

      - name: Lint
        uses: trunk-io/trunk-action@v1

      - name: Test
        run: go test ./... -coverprofile=cover.out

      - name: Build
        run: go build ./...

      - name: Report results to DeepSource
        run: |
          # Install deepsource CLI
            curl https://deepsource.io/cli | sh
          # From the root directory, run the report coverage command
            ./bin/deepsource report --analyzer test-coverage --key go --value-file ./cover.out
        env:
          DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

      - name: Update Pull Request Comment for Success
        if: ${{ success() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: code-analysis
          recreate: true
          message: |
            ## ‚úÖ Successfully completed Code Analysis & Testing
            ${{ env.pr_info }}
            _Merge this pull request if you think it's ready._

      - name: Update Pull Request Comment for Failure
        if: ${{ failure() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: code-analysis
          message: |
            ## ‚ùå Failed to complete Code Analysis & Testing
            ${{ env.pr_info }}
            _Please fix the errors before merging this pull request._
